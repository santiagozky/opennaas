<!--
/**
*  This code is part of the Harmony System implemented in Work Package 1 
*  of the Phosphorus project. This work is supported by the European 
*  Comission under the Sixth Framework Programme with contract number 
*  IST-034115.
*
*  Copyright (C) 2006-2009 Phosphorus WP1 partners. Phosphorus Consortium.
*  http://ist-phosphorus.eu/
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License (GPL) as published
*  by the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  IMPORTANT NOTICE: 
*  The authors have agreed this license scheme not to be final. The
*  authors reserve the right to change the current GNU GPL license 
*  for a most suitable one before the end of the Phosphorus project.
*  
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program;  If not, see <http://www.gnu.org/licenses/>.
*
*/
-->
<!--
 /**
  * Build script for the network service plane.
  *
  * @author	Jan Gassen (gassen@cs.uni-bonn.de)
  */
-->
<project basedir=".">
	<import file="build.common.xml" optional="true" />
	<property file="${dir.resources}/properties/generate.properties" />

	<!--
	/**
	 * Copy WSDL file.
	 */
	//-->
	<target name="doCopyGeneratedWsdlFile" if="doCopy">
		<mkdir dir="${dir.wsdl.generated}/${name}" />
		<copy todir="${dir.wsdl.generated}/${name}">
			<fileset dir="${dir.temp}/wsdl2java/WebContent/WEB-INF" />
		</copy>
	</target>

	<!--
	/**
	 * Check type.
	 */
	//-->
	<target name="copyGeneratedWsdlFile">
		<condition property="doCopy" value="${name}">
			<equals arg1="${type}" arg2="client" />
		</condition>

		<antcall target="doCopyGeneratedWsdlFile" />
	</target>

	<!--
	/**
	 * Build Webservice.
	 */
	//-->
	<macrodef name="buildWS">
		<attribute name="type" description="WS Type" />
		<attribute name="name" description="WS Name" />

		<element name="envs" optional="yes" />
		<sequential>
			<exec dir="${basedir}"
			      executable="${dir.scripts}/wsdl2java.sh"
			      spawn="false">
				<env key="MUSE_HOME" value="${dir.muse}" />
				<env key="WSDL_HOME" value="${dir.wsdl}" />
				<env key="JAVA_HOME" value="${env.JAVA_HOME}" />

				<env key="DIR_SCRIPTS" value="${dir.scripts}" />
				<env key="DIR_LOG" value="${dir.log}" />
				<env key="DIR_TEMP" value="${dir.temp}" />
				<env key="DIR_SRC" value="${dir.src}" />
				<env key="DIR_RESOURCES" value="${dir.resources}" />

				<env key="DIR_SERVLET" value="${DIR_SERVLET}" />
				<env key="DIR_SERVLET_RESERVATION"
				     value="${DIR_SERVLET_RESERVATION}" />
				<env key="DIR_SERVLET_TOPOLOGY"
				     value="${DIR_SERVLET_TOPOLOGY}" />
				<env key="DIR_SERVLET_NOTIFICATION"
				     value="${DIR_SERVLET_NOTIFICATION}" />
				<env key="SERVER_FLAGS" value="${serverFlags}" />
				<env key="CLIENT_FLAGS" value="${clientFlags}" />

				<envs />

				<arg value="@{type}" />
				<arg value="@{name}" />
			</exec>

			<antcall target="copyGeneratedWsdlFile">
				<param name="type" value="@{type}" />
				<param name="name" value="@{name}" />
			</antcall>
		</sequential>
	</macrodef>

	<!--
	/**
	 * Compile the wsdl2java generators
	 */
	 packages compile.generator Synthesizer.class files into a jar in muse directory
	//-->
	<target name="compile.generator">
		<javac debug="on" destdir="${dir.dist}">
			<src path="${dir.src}" />
			<include name="**/*Synthesizer*" />
			<classpath refid="classpath.tools" />
		</javac>
		<jar basedir="${dir.dist}"
		     destfile="${dir.muse}/modules/tools/PhosphorusGenerator.jar">
			<fileset dir="${dir.dist}">
				<include name="**/*Synthesizer*.class" />
			</fileset>
		</jar>
	</target>

	<!--
	/**
	 * Generate all webservice clients/servers and jaxb bindings.
	 */
	//-->
	<target name="generate.WS.all"
	        depends="
                compile.generator,
		generate.WS.topology.server, generate.WS.topology.client,
		generate.WS.reservation.server, generate.WS.reservation.client,
		generate.WS.notification.server, generate.WS.notification.client" />

	<!--
	/**
	 * Generate Reservation WS.
	 */
	//-->
	<target name="generate.WS.reservation.server" depends="compile.generator">
		<buildWS type="server" name="reservation">
			<envs>
				<env key="wsdl" value="${reservation.wsdl}" />
				<env key="ws" value="${reservation.ws}" />
				<env key="descriptor" value="${reservation.descriptor}" />
				<env key="server" value="${reservation.server}" />
				<env key="client" value="${reservation.client}" />
				<env key="handler" value="${reservation.handler}" />
			</envs>
		</buildWS>
	</target>

	<!--
	/**
	 * Generate Reservation Client.
	 */
	//-->
	<target name="generate.WS.reservation.client" depends="compile.generator">
		<buildWS type="client" name="reservation">
			<envs>
				<env key="wsdl" value="${reservation.wsdl}" />
				<env key="ws" value="${reservation.ws}" />
				<env key="descriptor" value="${reservation.descriptor}" />
				<env key="server" value="${reservation.server}" />
				<env key="client" value="${reservation.client}" />
				<env key="handler" value="${reservation.handler}" />
			</envs>
		</buildWS>
	</target>

	<!--
	/**
	 * Generate Notification WS.
	 */
	//-->
	<target name="generate.WS.notification.server" depends="compile.generator">
		<buildWS type="server" name="notification">
			<envs>
				<env key="wsdl" value="${notification.wsdl}" />
				<env key="ws" value="${notification.ws}" />
				<env key="descriptor" value="${notification.descriptor}" />
				<env key="server" value="${notification.server}" />
				<env key="client" value="${notification.client}" />
				<env key="handler" value="${notification.handler}" />
			</envs>
		</buildWS>
	</target>

	<!--
	/**
	 * Generate Notification Client.
	 */
	//-->
	<target name="generate.WS.notification.client" depends="compile.generator">
		<buildWS type="client" name="notification">
			<envs>
				<env key="wsdl" value="${notification.wsdl}" />
				<env key="ws" value="${notification.ws}" />
				<env key="descriptor" value="${notification.descriptor}" />
				<env key="server" value="${notification.server}" />
				<env key="client" value="${notification.client}" />
				<env key="handler" value="${notification.handler}" />
			</envs>
		</buildWS>
	</target>

	<!--
	/**
	 * Generate Topology WS.
	 */
	//-->
	<target name="generate.WS.topology.server" depends="compile.generator">
		<buildWS type="server" name="topology">
			<envs>
				<env key="wsdl" value="${topology.Topology.wsdl}" />
				<env key="ws" value="${topology.ws}" />
				<env key="descriptor" value="${topology.descriptor}" />
				<env key="server" value="${topology.server}" />
				<env key="client" value="${topology.client}" />
				<env key="handler" value="${topology.handler}" />
			</envs>
		</buildWS>
	</target>

	<!--
	/**
	 * Generate Topology Client.
	 */
	//-->
	<target name="generate.WS.topology.client" depends="compile.generator">
		<buildWS type="client" name="topology">
			<envs>
				<env key="wsdl" value="${topology.Topology.wsdl}" />
				<env key="ws" value="${topology.ws}" />
				<env key="descriptor" value="${topology.descriptor}" />
				<env key="server" value="${topology.server}" />
				<env key="client" value="${topology.client}" />
				<env key="handler" value="${topology.handler}" />
			</envs>
		</buildWS>
	</target>
</project>
