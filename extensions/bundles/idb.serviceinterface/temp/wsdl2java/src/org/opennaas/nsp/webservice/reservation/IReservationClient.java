package org.opennaas.extensions.idb.serviceinterface.reservation;

import org.w3c.dom.Element;
import org.apache.muse.ws.addressing.soap.SoapFault;

/**
 * reservation client.
 *
 * IReservationClient.java
 * Tue May 08 17:48:31 CEST 2012
 * Generated by the Apache Muse Code Generation Tool
 */
 public interface IReservationClient {


    /**
     * isAvailable Handler.
     *
     * @param isAvailable Request
     * @return isAvailable Response
     * @throws SoapFault In case of errors
     */
     Element isAvailable (Element isAvailable)
            throws SoapFault;


    /**
     * activate Handler.
     *
     * @param activate Request
     * @return activate Response
     * @throws SoapFault In case of errors
     */
     Element activate (Element activate)
            throws SoapFault;


    /**
     * cancelJob Handler.
     *
     * @param cancelJob Request
     * @return cancelJob Response
     * @throws SoapFault In case of errors
     */
     Element cancelJob (Element cancelJob)
            throws SoapFault;


    /**
     * createReservation Handler.
     *
     * @param createReservation Request
     * @return createReservation Response
     * @throws SoapFault In case of errors
     */
     Element createReservation (Element createReservation)
            throws SoapFault;


    /**
     * notification Handler.
     *
     * @param notification Request
     * @return notification Response
     * @throws SoapFault In case of errors
     */
     Element notification (Element notification)
            throws SoapFault;


    /**
     * bind Handler.
     *
     * @param bind Request
     * @return bind Response
     * @throws SoapFault In case of errors
     */
     Element bind (Element bind)
            throws SoapFault;


    /**
     * getStatus Handler.
     *
     * @param getStatus Request
     * @return getStatus Response
     * @throws SoapFault In case of errors
     */
     Element getStatus (Element getStatus)
            throws SoapFault;


    /**
     * completeJob Handler.
     *
     * @param completeJob Request
     * @return completeJob Response
     * @throws SoapFault In case of errors
     */
     Element completeJob (Element completeJob)
            throws SoapFault;


    /**
     * getReservations Handler.
     *
     * @param getReservations Request
     * @return getReservations Response
     * @throws SoapFault In case of errors
     */
     Element getReservations (Element getReservations)
            throws SoapFault;


    /**
     * cancelReservation Handler.
     *
     * @param cancelReservation Request
     * @return cancelReservation Response
     * @throws SoapFault In case of errors
     */
     Element cancelReservation (Element cancelReservation)
            throws SoapFault;


    /**
     * getReservation Handler.
     *
     * @param getReservation Request
     * @return getReservation Response
     * @throws SoapFault In case of errors
     */
     Element getReservation (Element getReservation)
            throws SoapFault;


}
