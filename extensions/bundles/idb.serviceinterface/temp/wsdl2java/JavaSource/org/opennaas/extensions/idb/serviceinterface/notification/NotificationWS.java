package org.opennaas.extensions.idb.serviceinterface.notification;

import org.w3c.dom.Element;
import org.apache.muse.core.AbstractCapability;

/**
 * notification server.
 *
 * NotificationWS.java
 * Tue May 15 23:39:33 CEST 2012
 * Generated by the Apache Muse Code Generation Tool
 */
 public class NotificationWS extends AbstractCapability implements INotificationWS {
    /**
     * getTopics Handler.
     *
     * @param getTopics Request
     * @return getTopics Response
     * @throws Exception In case of errors
     */
    public Element getTopics (final Element getTopics)
             throws Exception {
        return CommonNotificationHandler.getInstance().handle("getTopics", getTopics);
    }

    /**
     * unsubscribe Handler.
     *
     * @param unsubscribe Request
     * @return unsubscribe Response
     * @throws Exception In case of errors
     */
    public Element unsubscribe (final Element unsubscribe)
             throws Exception {
        return CommonNotificationHandler.getInstance().handle("unsubscribe", unsubscribe);
    }

    /**
     * publish Handler.
     *
     * @param publish Request
     * @return publish Response
     * @throws Exception In case of errors
     */
    public Element publish (final Element publish)
             throws Exception {
        return CommonNotificationHandler.getInstance().handle("publish", publish);
    }

    /**
     * removeTopic Handler.
     *
     * @param removeTopic Request
     * @return removeTopic Response
     * @throws Exception In case of errors
     */
    public Element removeTopic (final Element removeTopic)
             throws Exception {
        return CommonNotificationHandler.getInstance().handle("removeTopic", removeTopic);
    }

    /**
     * addTopic Handler.
     *
     * @param addTopic Request
     * @return addTopic Response
     * @throws Exception In case of errors
     */
    public Element addTopic (final Element addTopic)
             throws Exception {
        return CommonNotificationHandler.getInstance().handle("addTopic", addTopic);
    }

    /**
     * subscribe Handler.
     *
     * @param subscribe Request
     * @return subscribe Response
     * @throws Exception In case of errors
     */
    public Element subscribe (final Element subscribe)
             throws Exception {
        return CommonNotificationHandler.getInstance().handle("subscribe", subscribe);
    }

}